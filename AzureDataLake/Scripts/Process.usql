SET @@FeaturePreviews = "DataPartitionedOutput:on";

USE DATABASE [DecisionServiceDB];

REFERENCE ASSEMBLY DecisionServiceDB.[DecisionServiceExtractor];

DECLARE @_appId string = "";    //your appId
DECLARE @_account string = "";    // your account name

DECLARE @_start DateTime = new DateTime(2019, 10, 1);  //your inclusive start date
DECLARE @_end DateTime = new DateTime(2019, 10, 12);    //your non-inclusive end date

DECLARE @OutputFolder string = "/daily/" + @_appId + "/";      //your output folder
DECLARE @OutputSlimLogs bool = true;     //true if you want to have slime version of logs (all metadata without features)
     
DECLARE @InputFile string = "wasb://"+ @_appId +"@" + @_account + ".blob.core.windows.net/{model}/data/{date:yyyy}/{date:MM}/{date:dd}_{filename}.json";

DECLARE @OutputFileInteractions string = @OutputFolder + "interactions-{date:yyyy}-{date:MM}-{date:dd}.csv";
DECLARE @OutputFileDangling string = @OutputFolder + "dangling-{date:yyyy}-{date:MM}-{date:dd}.csv";
DECLARE @OutputFileStatistics string = @OutputFolder + "statistics-{date:yyyy}-{date:MM}-{date:dd}.csv";

@Events =  
    EXTRACT EventId string, 
            Timestamp DateTime, 
            EnqueuedTimeUtc DateTime,
            Prob float,
            Cost float,
            [Action] int,
            NumActions int,
            HasObservations int,
            model string, //virtual column
            date DateTime,
            filename string, //virtual column
            pdrop float,
            IsDangling bool,
            SkipLearn bool
    FROM @InputFile
    USING new DecisionServiceExtractor.HeaderOnly();

@Events = SELECT * FROM @Events WHERE date >= @_start AND date < @_end;

@Interactions = SELECT EventId, Timestamp, HasObservations, Prob, Cost, Action, NumActions, pdrop, SkipLearn, model, date FROM @Events WHERE IsDangling == false;

@Statistics =
    SELECT Timestamp.ToString("yyyy/MM/dd HH:00") AS hour,
           model,
           SUM(HasObservations != 0? (1.0 / (1.0 - pdrop)) : 0) AS obser,
           SUM(Cost != 0? (1.0 / (1.0 - pdrop)) : 0) AS clicks,
           SUM(1.0 / (1.0 - pdrop)) AS impressions,
           SUM(Cost != 0 AND Action == 1? (1.0 / (1.0 - pdrop)) : 0) AS clicks1,
           SUM(Action == 1? (1.0 / (1.0 - pdrop)) : 0) AS impressions1,
           SUM(Cost != 0 AND Action == 1? (1.0 / (1.0 - pdrop)) / Prob : 0) AS clicksIps1,
           SUM(Action == 1? (1.0 / (1.0 - pdrop)) / Prob : 0) AS impressionsIps1,
           SUM(Cost != 0? (1.0 / (1.0 - pdrop)) / Prob / NumActions : 0) AS clicksIpsR,
           SUM((1.0 / (1.0 - pdrop)) / Prob / NumActions) AS impressionsIpsR,
           (SUM(1.0) / SUM(1.0 / (1.0 - pdrop))) AS PassRatio,
           date
    FROM @Interactions
    GROUP BY Timestamp.ToString("yyyy/MM/dd HH:00"), model, date;

OUTPUT @Statistics
TO @OutputFileStatistics
USING Outputters.Csv(outputHeader:true);

IF @OutputSlimLogs == true THEN
    @Dangling =
        SELECT EventId,
            EnqueuedTimeUtc,
            model,
            date
        FROM @Events
        WHERE IsDangling == true;

    OUTPUT @Interactions
    TO @OutputFileInteractions
    USING Outputters.Csv(outputHeader:true);

    OUTPUT @Dangling
    TO @OutputFileDangling
    USING Outputters.Csv(outputHeader:true);
END;


